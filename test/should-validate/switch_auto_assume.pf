union A {
    a
    b
}

fun test(x : A){
    switch x {
        case a { true }
        case b { false }
    }
}


theorem test_thm: all x:A. test(x) = true or test(x) = false
proof
    arbitrary x:A
    switch x {
      case a assume G {
          exchange symmetric G
          show test(x) = true
          exchange G
          show test(a) = true
          evaluate
      }
      case b {
        exchange symmetric recall x = b
        show test(x) = false
        exchange recall x = b
        show test(b) = false
        evaluate
      }
    }
end
