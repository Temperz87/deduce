import UInt
import List

assert log(1) = 0
assert log(2) = 1
assert log(3) = 1
assert log(4) = 2

// log(2^n) = n
assert foldl([1,2,3,4,5,6,7,8,9,10], true,
  fun b:bool, n:UInt {
    b and log(2^n) = n
  })

// 2^log(n) ≤ n < 2 * 2^log(n)
assert foldl([1,2,3,4,5,6,7,8,9,10], true,
  fun b:bool, n:UInt {
    b and 2^log(n) ≤ n and n < 2 * 2^log(n)
  })

assert log(15) = 3
assert log(16) = 4
assert log(15 * 15) = 7
assert log(16 * 16) = 8

// log(m) + log(n) ≤ log(m * n)
assert foldl([1,2,3,4,5,6,7,8,9,10], true,
  fun b:bool, y:UInt {
    foldl([1,2,3,4,5,6,7,8,9,10], b,
      fun c:bool, x:UInt {
        log(x) + log(y) ≤ log(x * y)
        and c
      })
  })

// log(m * n) ≤ 1 + log(m) + log(n)
assert foldl([1,2,3,4,5,6,7,8,9,10], true,
  fun b:bool, y:UInt {
    foldl([1,2,3,4,5,6,7,8,9,10], b,
      fun c:bool, x:UInt {
        log(x * y) ≤ 1 + log(x) + log(y)
        and c
      })
  })

