import Nat

union Tree {
  empty(bool)
  node(Tree, Nat,Tree)
}

recursive size(Tree) -> Nat {
  size(empty) = ℕ0
  size(node(L, n, R)) = ℕ1 + size(L) + size(R)
}

theorem tree_size: all T:Tree. size(T) = size(T)
proof
  ?
end
