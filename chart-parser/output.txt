Running grammar interpreter in like debug mode idk man
Token('_NL', '\n\n')
Token('RULE', 'start')
Token('COLON', ':')
Token('LPAR', '(')
Token('RULE', '_item')
Token('OP', '?')
Token('TOKEN', '_NL')
Token('RPAR', ')')
Token('OP', '*')
Token('RULE', '_item')
Token('OP', '?')
Token('_NL', '\n\n')
Token('RULE', '_item')
Token('COLON', ':')
Token('RULE', 'rule')
Token('_VBAR', '\n     |')
Token('RULE', 'token')
Token('_VBAR', '\n     |')
Token('RULE', 'statement')
Token('_NL', '\n\n')
Token('RULE', 'rule')
Token('COLON', ':')
Token('TOKEN', 'RULE')
Token('RULE', 'rule_params')
Token('RULE', 'priority')
Token('OP', '?')
Token('STRING', '":"')
Token('RULE', 'expansions')
Token('_NL', '\n')
Token('RULE', 'token')
Token('COLON', ':')
Token('TOKEN', 'TOKEN')
Token('RULE', 'token_params')
Token('RULE', 'priority')
Token('OP', '?')
Token('STRING', '":"')
Token('RULE', 'expansions')
Token('_NL', '\n\n')
Token('RULE', 'rule_params')
Token('COLON', ':')
Token('LSQB', '[')
Token('STRING', '"{"')
Token('TOKEN', 'RULE')
Token('LPAR', '(')
Token('STRING', '","')
Token('TOKEN', 'RULE')
Token('RPAR', ')')
Token('OP', '*')
Token('STRING', '"}"')
Token('RSQB', ']')
Token('_NL', '\n')
Token('RULE', 'token_params')
Token('COLON', ':')
Token('LSQB', '[')
Token('STRING', '"{"')
Token('TOKEN', 'TOKEN')
Token('LPAR', '(')
Token('STRING', '","')
Token('TOKEN', 'TOKEN')
Token('RPAR', ')')
Token('OP', '*')
Token('STRING', '"}"')
Token('RSQB', ']')
Token('_NL', '\n\n')
Token('RULE', 'priority')
Token('COLON', ':')
Token('STRING', '"."')
Token('TOKEN', 'NUMBER')
Token('_NL', '\n\n')
Token('RULE', 'statement')
Token('COLON', ':')
Token('STRING', '"%ignore"')
Token('RULE', 'expansions')
Token('__ANON_0', '->')
Token('RULE', 'ignore')
Token('_VBAR', '\n         |')
Token('STRING', '"%import"')
Token('RULE', 'import_path')
Token('LSQB', '[')
Token('STRING', '"->"')
Token('RULE', 'name')
Token('RSQB', ']')
Token('__ANON_0', '->')
Token('RULE', 'import')
Token('_VBAR', '\n         |')
Token('STRING', '"%import"')
Token('RULE', 'import_path')
Token('RULE', 'name_list')
Token('__ANON_0', '->')
Token('RULE', 'multi_import')
Token('_VBAR', '\n         |')
Token('STRING', '"%override"')
Token('RULE', 'rule')
Token('__ANON_0', '->')
Token('RULE', 'override_rule')
Token('_VBAR', '\n         |')
Token('STRING', '"%declare"')
Token('RULE', 'name')
Token('OP', '+')
Token('__ANON_0', '->')
Token('RULE', 'declare')
Token('_NL', '\n\n')
Token('RULE', '!import_path')
Token('COLON', ':')
Token('STRING', '"."')
Token('OP', '?')
Token('RULE', 'name')
Token('LPAR', '(')
Token('STRING', '"."')
Token('RULE', 'name')
Token('RPAR', ')')
Token('OP', '*')
Token('_NL', '\n')
Token('RULE', 'name_list')
Token('COLON', ':')
Token('STRING', '"("')
Token('RULE', 'name')
Token('LPAR', '(')
Token('STRING', '","')
Token('RULE', 'name')
Token('RPAR', ')')
Token('OP', '*')
Token('STRING', '")"')
Token('_NL', '\n\n')
Token('RULE', '?expansions')
Token('COLON', ':')
Token('RULE', 'alias')
Token('LPAR', '(')
Token('TOKEN', '_VBAR')
Token('RULE', 'alias')
Token('RPAR', ')')
Token('OP', '*')
Token('_NL', '\n\n')
Token('RULE', '?alias')
Token('COLON', ':')
Token('RULE', 'expansion')
Token('LSQB', '[')
Token('STRING', '"->"')
Token('TOKEN', 'RULE')
Token('RSQB', ']')
Token('_NL', '\n\n')
Token('RULE', '?expansion')
Token('COLON', ':')
Token('RULE', 'expr')
Token('OP', '*')
Token('_NL', '\n\n')
Token('RULE', '?expr')
Token('COLON', ':')
Token('RULE', 'atom')
Token('LSQB', '[')
Token('TOKEN', 'OP')
Token('_VBAR', '|')
Token('STRING', '"~"')
Token('TOKEN', 'NUMBER')
Token('LSQB', '[')
Token('STRING', '".."')
Token('TOKEN', 'NUMBER')
Token('RSQB', ']')
Token('RSQB', ']')
Token('_NL', '\n\n')
Token('RULE', '?atom')
Token('COLON', ':')
Token('STRING', '"("')
Token('RULE', 'expansions')
Token('STRING', '")"')
Token('_VBAR', '\n     |')
Token('STRING', '"["')
Token('RULE', 'expansions')
Token('STRING', '"]"')
Token('__ANON_0', '->')
Token('RULE', 'maybe')
Token('_VBAR', '\n     |')
Token('RULE', 'value')
Token('_NL', '\n\n')
Token('RULE', '?value')
Token('COLON', ':')
Token('TOKEN', 'STRING')
Token('STRING', '".."')
Token('TOKEN', 'STRING')
Token('__ANON_0', '->')
Token('RULE', 'literal_range')
Token('_VBAR', '\n      |')
Token('RULE', 'name')
Token('_VBAR', '\n      |')
Token('LPAR', '(')
Token('TOKEN', 'REGEXP')
Token('_VBAR', '|')
Token('TOKEN', 'STRING')
Token('RPAR', ')')
Token('__ANON_0', '->')
Token('RULE', 'literal')
Token('_VBAR', '\n      |')
Token('RULE', 'name')
Token('STRING', '"{"')
Token('RULE', 'value')
Token('LPAR', '(')
Token('STRING', '","')
Token('RULE', 'value')
Token('RPAR', ')')
Token('OP', '*')
Token('STRING', '"}"')
Token('__ANON_0', '->')
Token('RULE', 'template_usage')
Token('_NL', '\n\n')
Token('RULE', 'name')
Token('COLON', ':')
Token('TOKEN', 'RULE')
Token('_VBAR', '\n    |')
Token('TOKEN', 'TOKEN')
Token('_NL', '\n\n')
Token('TOKEN', '_VBAR')
Token('COLON', ':')
Token('TOKEN', '_NL')
Token('OP', '?')
Token('STRING', '"|"')
Token('_NL', '\n')
Token('TOKEN', 'OP')
Token('COLON', ':')
Token('REGEXP', '/[+*]|[?](?![a-z])/')
Token('_NL', '\n')
Token('TOKEN', 'RULE')
Token('COLON', ':')
Token('REGEXP', '/!?[_?]?[a-z][_a-z0-9]*/')
Token('_NL', '\n')
Token('TOKEN', 'TOKEN')
Token('COLON', ':')
Token('REGEXP', '/_?[A-Z][_A-Z0-9]*/')
Token('_NL', '\n')
Token('TOKEN', 'STRING')
Token('COLON', ':')
Token('TOKEN', '_STRING')
Token('STRING', '"i"')
Token('OP', '?')
Token('_NL', '\n')
Token('TOKEN', 'REGEXP')
Token('COLON', ':')
Token('REGEXP', '/\\/(?!\\/)(\\\\\\/|\\\\\\\\|[^\\/])*?\\/[imslux]*/')
Token('_NL', '\n')
Token('TOKEN', '_NL')
Token('COLON', ':')
Token('REGEXP', '/(\\r?\\n)+\\s*/')
Token('_NL', '\n\n')
Token('__ANON_2', '%import')
Token('RULE', 'common')
Token('DOT', '.')
Token('TOKEN', 'ESCAPED_STRING')
Token('__ANON_0', '->')
Token('TOKEN', '_STRING')
Token('_NL', '\n')
Token('__ANON_2', '%import')
Token('RULE', 'common')
Token('DOT', '.')
Token('TOKEN', 'SIGNED_INT')
Token('__ANON_0', '->')
Token('TOKEN', 'NUMBER')
Token('_NL', '\n')
Token('__ANON_2', '%import')
Token('RULE', 'common')
Token('DOT', '.')
Token('TOKEN', 'WS_INLINE')
Token('_NL', '\n\n')
Token('TOKEN', 'COMMENT')
Token('COLON', ':')
Token('REGEXP', '/\\s*/')
Token('STRING', '"//"')
Token('REGEXP', '/[^\\n]/')
Token('OP', '*')
Token('_VBAR', '|')
Token('REGEXP', '/\\s*/')
Token('STRING', '"#"')
Token('REGEXP', '/[^\\n]/')
Token('OP', '*')
Token('_NL', '\n\n')
Token('__ANON_1', '%ignore')
Token('TOKEN', 'WS_INLINE')
Token('_NL', '\n')
Token('__ANON_1', '%ignore')
Token('TOKEN', 'COMMENT')
