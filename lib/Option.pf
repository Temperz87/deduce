union Option<T> {
  none
  just(T)
}

function after<T,U>(Option<T>, fn (T) -> U) -> Option<U> {
  after(none, f) = none
  after(just(x), f) = just(f(x))
}

function default<T>(Option<T>, T) -> T {
  default(none, y) = y
  default(just(x), y) = x
}
